{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.userRepos = [];\n    this.user_name = '';\n    this.activePage = 1;\n    this.totalRepos = 0;\n    this.perPage = 10; // Default per page\n    this.repositories = []; // Replace with your actual repository data\n    this.allRepositories = 0; // Replace with the total number of repositories\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.allRepositories\n    };\n  }\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n    this.fetchUserRepos(this.userData.repos_url);\n  }\n  // Method to fetch user data\n  fetchUserData(name) {\n    this.apiService.getUser(this.user_name).subscribe(data => {\n      this.userData = data;\n      console.log(data);\n      const reposUrl = data.repos_url;\n      this.fetchUserRepos(reposUrl);\n    });\n  }\n  // Method to fetch user repositories\n  // Method to fetch user repositories\n  fetchUserRepos(reposUrl, page = 1, itemsPerPage = 10) {\n    const startIndex = (page - 1) * itemsPerPage;\n    const apiUrl = `${reposUrl}?page=${page}&per_page=${itemsPerPage}`;\n    this.apiService.getRepos(apiUrl).subscribe(repos => {\n      this.userRepos = repos;\n      this.config.totalItems = this.totalRepos; // Update totalItems\n      this.config.currentPage = page; // Update currentPage\n    });\n\n    if (itemsPerPage >= 10) {\n      page++;\n      alert(\"More than 10 repos\");\n    }\n  }\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n  handleKeyboardEvent(event) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n};\n__decorate([HostListener('window:keydown', ['$event'])], AppComponent.prototype, \"handleKeyboardEvent\", null);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","HostListener","AppComponent","constructor","apiService","userRepos","user_name","activePage","totalRepos","perPage","repositories","allRepositories","config","itemsPerPage","currentPage","totalItems","ngOnInit","fetchUserData","fetchUserRepos","userData","repos_url","name","getUser","subscribe","data","console","log","reposUrl","page","startIndex","apiUrl","getRepos","repos","alert","updateUserName","changeNameAndFetchData","newName","handleKeyboardEvent","event","key","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kamru\\OneDrive\\Desktop\\fyle-internship-challenge-23-master\\fyle-internship-challenge-23-master\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { ApiService } from './services/api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\n\n\n  userData: any;\n  userRepos: any[] = [];\n  user_name: string = '';\n  activePage: number = 1;\n  totalRepos: number = 0;\n  perPage: number = 10; // Default per page\n  repositories: any[] = []; // Replace with your actual repository data\n  allRepositories: number = 0; // Replace with the total number of repositories\n  config = {\n    itemsPerPage: 10,\n    currentPage: 1,\n    totalItems: this.allRepositories\n  };\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n    this.fetchUserRepos(this.userData.repos_url);\n  }\n\n  \n\n  // Method to fetch user data\n  fetchUserData(name: string) {\n    this.apiService.getUser(this.user_name).subscribe((data: any) => {\n      this.userData = data;\n      console.log(data);\n      const reposUrl = data.repos_url;\n      this.fetchUserRepos(reposUrl);\n\n\n    });\n  }\n\n\n\n\n\n\n  // Method to fetch user repositories\n   // Method to fetch user repositories\n   fetchUserRepos(reposUrl: string, page: number = 1, itemsPerPage: number = 10) {\n    const startIndex = (page - 1) * itemsPerPage;\n    const apiUrl = `${reposUrl}?page=${page}&per_page=${itemsPerPage}`;\n    this.apiService.getRepos(apiUrl).subscribe((repos: any[]) => {\n      this.userRepos = repos;\n      this.config.totalItems = this.totalRepos; // Update totalItems\n      this.config.currentPage = page; // Update currentPage\n    });\n    if (itemsPerPage >= 10) {\n      page++;\n      alert(\"More than 10 repos\");\n    }\n  }\n\n   \n\n \n  \n \n\n\n\n\n\n\n\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName: string) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n\n\n   \n\n\n \n\n  @HostListener('window:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAgB,eAAe;AAQxD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAmBvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAb9B,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,OAAO,GAAW,EAAE,CAAC,CAAC;IACtB,KAAAC,YAAY,GAAU,EAAE,CAAC,CAAC;IAC1B,KAAAC,eAAe,GAAW,CAAC,CAAC,CAAC;IAC7B,KAAAC,MAAM,GAAG;MACPC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,IAAI,CAACJ;KAClB;EAE4C;EAE7CK,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,CAAC,IAAI,CAACX,SAAS,CAAC;IAClC,IAAI,CAACY,cAAc,CAAC,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC;EAC9C;EAIA;EACAH,aAAaA,CAACI,IAAY;IACxB,IAAI,CAACjB,UAAU,CAACkB,OAAO,CAAC,IAAI,CAAChB,SAAS,CAAC,CAACiB,SAAS,CAAEC,IAAS,IAAI;MAC9D,IAAI,CAACL,QAAQ,GAAGK,IAAI;MACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAGH,IAAI,CAACJ,SAAS;MAC/B,IAAI,CAACF,cAAc,CAACS,QAAQ,CAAC;IAG/B,CAAC,CAAC;EACJ;EAOA;EACC;EACAT,cAAcA,CAACS,QAAgB,EAAEC,IAAA,GAAe,CAAC,EAAEf,YAAA,GAAuB,EAAE;IAC3E,MAAMgB,UAAU,GAAG,CAACD,IAAI,GAAG,CAAC,IAAIf,YAAY;IAC5C,MAAMiB,MAAM,GAAG,GAAGH,QAAQ,SAASC,IAAI,aAAaf,YAAY,EAAE;IAClE,IAAI,CAACT,UAAU,CAAC2B,QAAQ,CAACD,MAAM,CAAC,CAACP,SAAS,CAAES,KAAY,IAAI;MAC1D,IAAI,CAAC3B,SAAS,GAAG2B,KAAK;MACtB,IAAI,CAACpB,MAAM,CAACG,UAAU,GAAG,IAAI,CAACP,UAAU,CAAC,CAAC;MAC1C,IAAI,CAACI,MAAM,CAACE,WAAW,GAAGc,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;;IACF,IAAIf,YAAY,IAAI,EAAE,EAAE;MACtBe,IAAI,EAAE;MACNK,KAAK,CAAC,oBAAoB,CAAC;;EAE/B;EAcAC,cAAcA,CAAA;IACZ;IACA;IACA,IAAI,CAACjB,aAAa,CAAC,IAAI,CAACX,SAAS,CAAC;EACpC;EAEA;EACA6B,sBAAsBA,CAACC,OAAe;IACpC,IAAI,CAAC9B,SAAS,GAAG8B,OAAO;IACxB,IAAI,CAACnB,aAAa,CAAC,IAAI,CAACX,SAAS,CAAC;EACpC;EASA+B,mBAAmBA,CAACC,KAAoB;IACtC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzB,IAAI,CAACL,cAAc,EAAE;;EAEzB;CACD;AALCM,UAAA,EADCvC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,C,sDAK1C;AAhGUC,YAAY,GAAAsC,UAAA,EALxBxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWzC,YAAY,CAiGxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}