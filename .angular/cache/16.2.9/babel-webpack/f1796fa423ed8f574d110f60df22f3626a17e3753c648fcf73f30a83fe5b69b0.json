{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    // Add these properties to your component class\n    this.totalItems = 1;\n    this.currentPage = 1;\n    this.userRepos = [];\n    this.user_name = '';\n    this.activePage = 1;\n    this.totalRepos = 1;\n    this.perPage = 10; // Default per page\n    this.totalPages = 1;\n    this.currentPage = 1; // Initialize currentPage to 1\n  }\n\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n  }\n  fetchUserData(name) {\n    this.apiService.getUser(this.user_name).subscribe(data => {\n      this.userData = data;\n      this.totalItems = data.public_repos;\n      // Fetch user repos for the current page\n      this.fetchUserRepos(data.repos_url, this.currentPage, this.perPage);\n    });\n  }\n  fetchUserRepos(reposUrl, page, itemsPerPage) {\n    const startIndex = (page - 1) * itemsPerPage;\n    const apiUrl = `${reposUrl}?page=${page}&per_page=${itemsPerPage}`;\n    this.apiService.getRepos(apiUrl).subscribe(repos => {\n      this.userRepos = repos;\n    });\n  }\n  // Method to update the page when a page link is clicked\n  changePage(action) {\n    if (action === 'prev') {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      } else {\n        // Handle when the user is on the first page\n        alert('You are already on the first page.');\n      }\n    } else if (action === 'next') {\n      if (this.currentPage < this.totalItems) {\n        this.currentPage++;\n      } else {\n        // Handle when the user is on the last page\n        alert('You are already on the last page.');\n      }\n    } else if (typeof action === 'number' && action >= 1 && action <= this.totalItems) {\n      this.currentPage = action;\n    }\n    this.fetchUserData(this.user_name);\n  }\n  getPages(totalItems, perPage) {\n    const totalPages = Math.ceil(totalItems / perPage);\n    return Array.from({\n      length: totalPages\n    }, (_, i) => i + 1);\n  }\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n  handleKeyboardEvent(event) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n};\n__decorate([HostListener('window:keydown', ['$event'])], AppComponent.prototype, \"handleKeyboardEvent\", null);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","HostListener","AppComponent","constructor","apiService","totalItems","currentPage","userRepos","user_name","activePage","totalRepos","perPage","totalPages","ngOnInit","fetchUserData","name","getUser","subscribe","data","userData","public_repos","fetchUserRepos","repos_url","reposUrl","page","itemsPerPage","startIndex","apiUrl","getRepos","repos","changePage","action","alert","getPages","Math","ceil","Array","from","length","_","i","updateUserName","changeNameAndFetchData","newName","handleKeyboardEvent","event","key","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kamru\\OneDrive\\Desktop\\fly\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { ApiService } from './services/api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\n  \n\n\n\n   // Add these properties to your component class\ntotalItems: number = 1;\ncurrentPage: number = 1;\n\n  userData: any;\n  userRepos: any[] = [];\n  user_name: string = '';\n  activePage: number = 1;\n  totalRepos: number = 1;\n  perPage: number = 10; // Default per page\n  totalPages: number = 1;\n\n\n  constructor(private apiService: ApiService) {\n    this.currentPage = 1; // Initialize currentPage to 1\n  }\n  \n\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n   \n  }\n\n  \n  fetchUserData(name: string) {\n    this.apiService.getUser(this.user_name).subscribe((data: any) => {\n      this.userData = data;\n      this.totalItems = data.public_repos;\n      \n      // Fetch user repos for the current page\n      this.fetchUserRepos(data.repos_url, this.currentPage, this.perPage);\n    });\n  }\n  \n  fetchUserRepos(reposUrl: string, page: number, itemsPerPage: number) {\n    const startIndex = (page - 1) * itemsPerPage;\n    const apiUrl = `${reposUrl}?page=${page}&per_page=${itemsPerPage}`;\n    this.apiService.getRepos(apiUrl).subscribe((repos: any[]) => {\n      this.userRepos = repos;\n    });\n  }\n\n // Method to update the page when a page link is clicked\n changePage(action: string | number) {\n  if (action === 'prev') {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    } else {\n      // Handle when the user is on the first page\n      alert('You are already on the first page.');\n    }\n  } else if (action === 'next') {\n    if (this.currentPage < this.totalItems) {\n      this.currentPage++;\n    } else {\n      // Handle when the user is on the last page\n      alert('You are already on the last page.');\n    }\n  } else if (typeof action === 'number' && action >= 1 && action <= this.totalItems) {\n    this.currentPage = action;\n  }\n  this.fetchUserData(this.user_name);\n}\n\n\n\n\ngetPages(totalItems: number, perPage: number): number[] {\n  const totalPages = Math.ceil(totalItems / perPage);\n    \n  return Array.from({ length: totalPages }, (_, i) => i + 1);\n}\n\n\n   \n\n \n  \n\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName: string) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n\n\n   \n\n\n \n\n  @HostListener('window:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}