{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.userRepos = []; // Array to store user repositories\n    this.user_name = ''; // Initial value for name\n    this.maxItemsPerPage = 10;\n    this.itemsPerPageOptions = [10, 25, 50, 100]; // Permitted items per page options\n  }\n\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n  }\n  // Method to fetch user data\n  fetchUserData(name) {\n    this.apiService.getUser(this.user_name).subscribe(data => {\n      this.userData = data;\n      console.log(data);\n      const reposUrl = data.repos_url;\n      this.fetchUserRepos(reposUrl);\n    });\n  }\n  // Method to fetch user data\n  // Method to fetch user repositories\n  fetchUserRepos(reposUrl) {\n    this.apiService.getRepos(reposUrl).subscribe(repos => {\n      this.userRepos = repos;\n      // console.log('User Repositories:', this.userRepos);\n      const repo = this.userRepos;\n      console.log(repo);\n    });\n  }\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n  changeItemsPerPage(newItemsPerPage) {\n    if (newItemsPerPage <= this.maxItemsPerPage) {\n      this.maxItemsPerPage = newItemsPerPage;\n      this.fetchUserRepos(this.userData.repos_url);\n    }\n  }\n  handleKeyboardEvent(event) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n};\n__decorate([HostListener('window:keydown', ['$event'])], AppComponent.prototype, \"handleKeyboardEvent\", null);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","HostListener","AppComponent","constructor","apiService","userRepos","user_name","maxItemsPerPage","itemsPerPageOptions","ngOnInit","fetchUserData","name","getUser","subscribe","data","userData","console","log","reposUrl","repos_url","fetchUserRepos","getRepos","repos","repo","updateUserName","changeNameAndFetchData","newName","changeItemsPerPage","newItemsPerPage","handleKeyboardEvent","event","key","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kamru\\OneDrive\\Desktop\\fyle-internship-challenge-23-master\\fyle-internship-challenge-23-master\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { ApiService } from './services/api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  userData: any;\n  userRepos: any[] = []; // Array to store user repositories\n  user_name: string = ''; // Initial value for name\n  activePage: number | undefined;\n maxItemsPerPage: number = 10;\n itemsPerPageOptions: number[] = [10, 25, 50, 100]; // Permitted items per page options\n\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit() {\n    this.fetchUserData(this.user_name);\n  }\n\n  // Method to fetch user data\n  fetchUserData(name: string) {\n    this.apiService.getUser(this.user_name).subscribe((data: any) => {\n      this.userData = data;\n      console.log(data);\n      const reposUrl = data.repos_url;\n      this.fetchUserRepos(reposUrl);\n\n\n    });\n  }\n\n  // Method to fetch user data\n\n\n  // Method to fetch user repositories\n  fetchUserRepos(reposUrl: string) {\n    this.apiService.getRepos(reposUrl).subscribe((repos: any[]) => {\n      this.userRepos = repos;\n      // console.log('User Repositories:', this.userRepos);\n\n\n        const repo = this.userRepos;\n\n        console.log(repo);\n      \n    });\n  }\n\n  updateUserName() {\n    // This method will be triggered when the \"Submit\" button is clicked\n    // Update the user_name with the input value, and then fetch user data\n    this.fetchUserData(this.user_name);\n  }\n\n  // Method to change the name and fetch new user data\n  changeNameAndFetchData(newName: string) {\n    this.user_name = newName;\n    this.fetchUserData(this.user_name);\n  }\n\n\n\n  changeItemsPerPage(newItemsPerPage: number) {\n    if (newItemsPerPage <= this.maxItemsPerPage) {\n      this.maxItemsPerPage = newItemsPerPage;\n      this.fetchUserRepos(this.userData.repos_url);\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.updateUserName();\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAgB,eAAe;AAQxD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EASvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAP9B,KAAAC,SAAS,GAAU,EAAE,CAAC,CAAC;IACvB,KAAAC,SAAS,GAAW,EAAE,CAAC,CAAC;IAEzB,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,mBAAmB,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EAGL;;EAE7CC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,CAAC,IAAI,CAACJ,SAAS,CAAC;EACpC;EAEA;EACAI,aAAaA,CAACC,IAAY;IACxB,IAAI,CAACP,UAAU,CAACQ,OAAO,CAAC,IAAI,CAACN,SAAS,CAAC,CAACO,SAAS,CAAEC,IAAS,IAAI;MAC9D,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,MAAMI,QAAQ,GAAGJ,IAAI,CAACK,SAAS;MAC/B,IAAI,CAACC,cAAc,CAACF,QAAQ,CAAC;IAG/B,CAAC,CAAC;EACJ;EAEA;EAGA;EACAE,cAAcA,CAACF,QAAgB;IAC7B,IAAI,CAACd,UAAU,CAACiB,QAAQ,CAACH,QAAQ,CAAC,CAACL,SAAS,CAAES,KAAY,IAAI;MAC5D,IAAI,CAACjB,SAAS,GAAGiB,KAAK;MACtB;MAGE,MAAMC,IAAI,GAAG,IAAI,CAAClB,SAAS;MAE3BW,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;IAErB,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA;IACZ;IACA;IACA,IAAI,CAACd,aAAa,CAAC,IAAI,CAACJ,SAAS,CAAC;EACpC;EAEA;EACAmB,sBAAsBA,CAACC,OAAe;IACpC,IAAI,CAACpB,SAAS,GAAGoB,OAAO;IACxB,IAAI,CAAChB,aAAa,CAAC,IAAI,CAACJ,SAAS,CAAC;EACpC;EAIAqB,kBAAkBA,CAACC,eAAuB;IACxC,IAAIA,eAAe,IAAI,IAAI,CAACrB,eAAe,EAAE;MAC3C,IAAI,CAACA,eAAe,GAAGqB,eAAe;MACtC,IAAI,CAACR,cAAc,CAAC,IAAI,CAACL,QAAQ,CAACI,SAAS,CAAC;;EAEhD;EAGAU,mBAAmBA,CAACC,KAAoB;IACtC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzB,IAAI,CAACP,cAAc,EAAE;;EAEzB;CACD;AALCQ,UAAA,EADC/B,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,C,sDAK1C;AAtEUC,YAAY,GAAA8B,UAAA,EALxBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWjC,YAAY,CAuExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}