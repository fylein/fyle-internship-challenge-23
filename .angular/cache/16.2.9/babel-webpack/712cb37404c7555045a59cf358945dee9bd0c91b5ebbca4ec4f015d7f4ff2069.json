{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AppInterceptor = /*#__PURE__*/(() => {\n  class AppInterceptor {\n    constructor(router) {\n      this.router = router;\n    }\n    intercept(req, next) {\n      const token = localStorage.getItem('token');\n      const a = localStorage.getItem('formdata');\n      const b = localStorage.getItem('userToken');\n      const session = sessionStorage.getItem('TOKEN_KEY');\n      if (a !== 'true' || a === null) {\n        req = req.clone({\n          setHeaders: {\n            // 'Content-Type': 'application/json',\n            'Accept': '*/*',\n            'Accept-language': 'en-US,en;q=0.9'\n          }\n        });\n      } else {\n        req = req.clone({\n          setHeaders: {\n            'Accept': 'application/json',\n            'Authorization': 'bearer ' + session\n          }\n        });\n      }\n      // console.log(\"url\",req)\n      //  if(session == null && b!=''){\n      //     this.router.navigate(['/']);\n      //     localStorage.setItem('userToken', '');\n      //  }\n      return next.handle(req).pipe(catchError(err => {\n        if (err.status === 401) {\n          localStorage.clear();\n          this.router.navigate(['/signin']);\n        } else if (err.status === 403) {\n          console.log(err);\n        }\n        return throwError(err);\n      }));\n    }\n    static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n      return new (t || AppInterceptor)(i0.ɵɵinject(i1.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppInterceptor,\n      factory: AppInterceptor.ɵfac\n    });\n  }\n  return AppInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}