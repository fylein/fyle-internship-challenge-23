{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  getRepo(repo) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getUser(githubUsername) {\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}`);\n  }\n  getRepo(githubRepo) {\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}/repos`);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiService","getRepo","repo","Error","constructor","httpClient","getUser","githubUsername","get","githubRepo","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kamru\\OneDrive\\Desktop\\fyle-internship-challenge-23-master\\fyle-internship-challenge-23-master\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  getRepo(repo: string) {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getUser(githubUsername: string) {\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}`);\n  }\n\n  getRepo(githubRepo: string) {\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}/repos`);\n  }\n\n  // implement getRepos method by referring to the documentation. Add proper types for the return type and params \n}\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EACrBC,OAAOA,CAACC,IAAY;IAClB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAChB;EAEJC,OAAOA,CAACC,cAAsB;IAC5B,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,gCAAgCD,cAAc,EAAE,CAAC;EAC9E;EAEAN,OAAOA,CAACQ,UAAkB;IACxB,OAAO,IAAI,CAACJ,UAAU,CAACG,GAAG,CAAC,gCAAgCD,cAAc,QAAQ,CAAC;EACpF;EAAC,QAAAG,CAAA,G;qBAfUV,UAAU,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVf,UAAU;IAAAgB,OAAA,EAAVhB,UAAU,CAAAiB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}