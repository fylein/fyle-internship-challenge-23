{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n    }\n    formatErrors(httpresponse) {\n      return throwError(httpresponse);\n    }\n    anonGet(path, params = new HttpParams()) {\n      return this.http.get(`${path}`, {\n        params\n      }).pipe(catchError(this.formatErrors));\n    }\n    get(path, params = new HttpParams()) {\n      return this.http.get(`${path}`, {\n        params\n      }).pipe(catchError(this.formatErrors));\n    }\n    getFile(path, params = new HttpParams()) {\n      return this.http.get(`${path}`, {\n        params,\n        responseType: 'arraybuffer'\n      }).pipe(catchError(this.formatErrors));\n    }\n    delete(path, params = new HttpParams()) {\n      return this.http.delete(`${path}`, {\n        params\n      }).pipe(catchError(this.formatErrors));\n    }\n    post(path, body = {}) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this.http.post(`${path}`, JSON.stringify(body), {\n        headers,\n        responseType: 'json'\n      }).pipe(catchError(this.formatErrors));\n    }\n    postGetFile(path, body = {}) {\n      return this.http.post(`${path}`, JSON.stringify(body), {\n        responseType: 'arraybuffer'\n      }).pipe(catchError(this.formatErrors));\n    }\n    put(path, body = {}) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this.http.put(`${path}`, JSON.stringify(body), {\n        headers,\n        responseType: 'json'\n      }).pipe(catchError(this.formatErrors));\n    }\n    patch(path, body = {}) {\n      return this.http.patch(`${path}`, JSON.stringify(body)).pipe(catchError(this.formatErrors));\n    }\n    post_text(path, body = {}) {\n      const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n      return this.http.post(`${path}`, JSON.stringify(body), {\n        headers,\n        responseType: 'text'\n      }).pipe(catchError(this.formatErrors));\n    }\n    static #_ = this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac\n    });\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}